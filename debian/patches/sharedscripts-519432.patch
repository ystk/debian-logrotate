Index: logrotate-3.8.1/logrotate.c
===================================================================
--- logrotate-3.8.1.orig/logrotate.c	2011-12-05 16:40:09.932530558 +0000
+++ logrotate-3.8.1/logrotate.c	2011-12-05 16:40:17.796749416 +0000
@@ -260,6 +260,42 @@
     return rc;
 }
 
+static int runScriptMultiple(char *logfn, char *script, struct logNames **rotNames, int numFiles)
+{
+    int rc,i;
+    char **argv;
+
+    if (debug) {
+	message(MESS_DEBUG, "running script (multiple) with arg %s: \"%s\"\n",
+		logfn, script);
+	return 0;
+    }
+
+    argv = calloc(numFiles+5,sizeof(char*));
+    if (NULL == argv) {
+	message(MESS_ERROR,"error allocating memory to runScriptMultiple\n");
+	return -1;
+    }
+
+    argv[0] = "sh";
+    argv[1] = "-c";
+    argv[2] = script;
+    argv[3] = "logrotate_script";
+
+    for (i = 0; i<numFiles; i++) {
+	argv[i+4] = rotNames[i]->finalName;
+    }
+    argv[i+4] = NULL;
+
+    if (!fork()) {
+	execv("/bin/sh",argv);
+	exit(1);
+    }
+
+    wait(&rc);
+    return rc;
+}
+
 int createOutputFile(char *fileName, int flags, struct stat *sb)
 {
     int fd;
@@ -1548,18 +1584,22 @@
 			"since no logs will be rotated\n");
 	    } else {
 		message(MESS_DEBUG, "running prerotate script\n");
-		if (runScript(log->flags & LOG_FLAG_SHAREDSCRIPTS ? log->pattern : log->files[j], log->pre)) {
-		    if (log->flags & LOG_FLAG_SHAREDSCRIPTS)
+	        if (log->flags & LOG_FLAG_SHAREDSCRIPTS) {
+		    if (runScriptMultiple(log->pattern, log->pre, rotNames, log->numFiles)) {
 			message(MESS_ERROR,
 				"error running shared prerotate script "
 				"for '%s'\n", log->pattern);
-		    else {
+			logHasErrors[j] = 1;
+			hasErrors = 1;
+		    }
+		} else {
+		    if (runScriptMultiple(log->pattern, log->pre, &rotNames[j], 1)) {
 			message(MESS_ERROR,
 				"error running non-shared prerotate script "
 				"for %s of '%s'\n", log->files[j], log->pattern);
+			logHasErrors[j] = 1;
+			hasErrors = 1;
 		    }
-		    logHasErrors[j] = 1;
-		    hasErrors = 1;
 		}
 	    }
 	}
@@ -1583,18 +1623,22 @@
 			"since no logs were rotated\n");
 	    } else {
 		message(MESS_DEBUG, "running postrotate script\n");
-		if (runScript(log->flags & LOG_FLAG_SHAREDSCRIPTS ? log->pattern : log->files[j], log->post)) {
-		    if (log->flags & LOG_FLAG_SHAREDSCRIPTS)
+		if (log->flags & LOG_FLAG_SHAREDSCRIPTS) {
+		    if (runScriptMultiple(log->pattern, log->post, rotNames, log->numFiles)) {
 			message(MESS_ERROR,
 				"error running shared postrotate script "
 				"for '%s'\n", log->pattern);
-		    else {
+			logHasErrors[j] = 1;
+			hasErrors = 1;
+		    }
+		} else {
+		    if (runScriptMultiple(log->pattern, log->post, &rotNames[j], 1)) {
 			message(MESS_ERROR,
 				"error running non-shared postrotate script "
 				"for %s of '%s'\n", log->files[j], log->pattern);
+			logHasErrors[j] = 1;
+			hasErrors = 1;
 		    }
-		    logHasErrors[j] = 1;
-		    hasErrors = 1;
 		}
 	    }
 	}
